NOTE: These directions have been updated to work with the version of DropBox made 
	  available as of November 2012.

NOTE: You must have an account with the AlCa group in order to use these directions.



1) Create the SQLlite file. 

cd RecoTauTag/TauAnalysisTools/test/
cmsRun writeMVAs_cfg.py
 
This will print out a great deal of information for debugging purposes.


2) Check the payloads that are present in the created file, as of this writing, "Jec11_V12", but change
to the latest tag as you've done above. 

cd uploadToDropbox
cmscond_list_iov -c sqlite_file:RecoTauTag_MVAs_2014Apr29.db -a

NOTE: replace RecoTauTag_MVAs_2014Apr29.db by the name of the SQLlite file that you created in step 1) 


3) Then check each of the payloads individually. There is a script to help you out called "testAllIOVs.py".

python testAllIOVs.py

Example output:
...
	===============================================================
	Tag: RecoTauTag_againstMuonMVAv1_WPeff99_0
	===============================================================
	OID: 0001-00000062
	Scope: Unknown
	Description:  
	TimeType: runnumber
	Since                 Till                  Payload OID    Payload Class       
	--------------------  --------------------  -------------  --------------------
	                   1  18446744073709551615  0002-00000051  PhysicsTGraphPayload

	Total # of payload objects: 1
	===============================================================
	Tag: RecoTauTag_againstMuonMVAv1_WPeff99_5
	===============================================================
	OID: 0001-00000061
	Scope: Unknown
	Description:  
	TimeType: runnumber
	Since                 Till                  Payload OID    Payload Class       
	--------------------  --------------------  -------------  --------------------
	                   1  18446744073709551615  0002-00000050  PhysicsTGraphPayload

	Total # of payload objects: 1
	=================================================================
	Tag: RecoTauTag_againstMuonMVAv1_mvaOutput_normalization
	=================================================================
	OID: 0001-00000064
	Scope: Unknown
	Description:  
	TimeType: runnumber
	Since                 Till                  Payload OID    Payload Class         
	--------------------  --------------------  -------------  ----------------------
	                   1  18446744073709551615  0003-00000000  PhysicsTFormulaPayload

	Total # of payload objects: 1
	===========================================================
	Tag: RecoTauTag_antiElectronMVA5v1_gbr_NoEleMatch_wGwGSF_BL
	===========================================================
	OID: 0001-00000008
	Scope: Unknown
	Description:  
	TimeType: runnumber
	Since                 Till                  Payload OID    Payload Class
	--------------------  --------------------  -------------  -------------
	                   1  18446744073709551615  0000-00000008      GBRForest

	Total # of payload objects: 1
...
 

4) Upload the payloads to the TEST dropbox:

python uploadConstants.py --version=2014Apr29 --sqlite_file=../RecoTauTag_MVAs_2014Apr29.db --prep 


5) Now the files can be checked here:

https://cms-conddb-prod.cern.ch/logs/dropBox/


6) Check the uploaded test payloads. 

cmscond_list_iov -c frontier://FrontierPrep/CMS_COND_PHYSICSTOOLS -a | grep RecoTauTag

NOTE: If that doesn't work, try 
cmscond_list_iov -P /afs/cern.ch/cms/DB/conddb -c oracle://cms_orcoff_prep/CMS_COND_PHYSICSTOOLS -a | grep RecoTauTag

<-- CV: this is how far I got


7) Run on the uploaded test payloads. Again be sure to change the input tag name:

cmsRun JetCorrectorDemoPrep_cfg.py

<-- CV: step 7 not implemented in Tau case yet


8) Now run the "uploadConstants.py" script again. Ommit the "--prep" option this time

python uploadConstants.py --version=2014Apr29 --sqlite_file=../RecoTauTag_MVAs_2014Apr29.db
 

9) Check here to make sure they were uploaded correctly:

NOTE: For the old DropBox see http://condb.web.cern.ch/condb/DropBoxOffline/HTTPRequest.py


10) Then check to see if the payloads were uploaded. Either:

cmscond_list_iov -c frontier://FrontierProd/CMS_COND_31X_PHYSICSTOOLS -a | grep RecoTauTag

NOTE: Only use this one if absolutely necessary
	  cmscond_list_iov -P /afs/cern.ch/cms/DB/conddb -c oracle://cms_orcon_adg/CMS_COND_31X_PHYSICSTOOLS -a | grep RecoTauTag

or check

http://cms-conddb.cern.ch/payload_inspector/

The DBService is "offline production" 

The account is "Physics Tools for 31x"

Then click "SUBMIT"

NOTE: You may need to sort by "Last update time" rather than "ID".


11) Check that the right number of payloads was updated

cmscond_list_iov -P /afs/cern.ch/cms/DB/conddb -c oracle://cms_orcoff_prod/CMS_COND_31X_PHYSICSTOOLS -a | grep RecoTauTag | wc -l 

This should match the number sent to the ALCA list


12) Ask the ALCA L2's to create the global tag.

 
13) Check the global tags here:

http://cms-conddb.cern.ch/popcon/PopConRecentActivityRecorded.html

